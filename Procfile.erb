# GDK Procfile services:
# - all commands must start with 'exec'
# - no inline shell scripts ('&&' or ';')
#

# Datasources
#
redis: exec redis-server <%= config.gdk_root.join('redis', 'redis.conf') %>
minio: exec support/object-store
postgresql: exec support/postgresql-signal-wrapper <%= config.postgresql.bin_dir %>/postgres -D <%= config.postgresql.data_dir %> -k <%= config.postgresql.dir %> -h ''
#postgresql-replica: exec support/postgresql-signal-wrapper <%= config.postgresql.bin_dir %>/postgres -D <%= config.postgresql.replica_dir %>/data -k <%= config.postgresql.replica_dir %> -h ''
#openldap: exec support/exec-cd gitlab-openldap libexec/slapd -F slapd.d -d2 -h "ldap://$host:3890"
#storage-check: exec /usr/bin/env RAILS_ENV=development RAILS_RELATIVE_URL_ROOT=$relative_url_root support/exec-cd gitlab bin/storage_check -t unix://<%= config.gdk_root.join('gitlab.socket') %>

# Geo
#
<%= '#' unless config.geo? %>postgresql-geo: exec support/postgresql-signal-wrapper <%= config.postgresql.bin_dir %>/postgres -D <%= config.postgresql.geo.dir %>/data -k <%= config.postgresql.geo.dir %> -h ''
<%= '#' unless config.geo? %>geo-cursor: exec /usr/bin/env RAILS_ENV=development RAILS_RELATIVE_URL_ROOT=$relative_url_root support/geo-logcursor

# Backend services
#
gitlab-workhorse: exec /usr/bin/env PATH="<%= config.gdk_root.join('gitlab-workhorse', 'bin') %>:$PATH" gitlab-workhorse -authSocket <%= config.gdk_root.join('gitlab.socket') %> -listenAddr <%= config.workhorse.__active_host %>:<%= config.workhorse.__active_port %> -documentRoot <%= config.gdk_root.join('gitlab', 'public') %> -developmentMode -secretPath <%= config.gdk_root.join('gitlab', '.gitlab_workhorse_secret') %> -config <%= config.gdk_root.join('gitlab-workhorse', 'config.toml') %>
rails-background-jobs: exec /usr/bin/env SIDEKIQ_LOG_ARGUMENTS=1 RAILS_ENV=development RAILS_RELATIVE_URL_ROOT=$relative_url_root support/exec-cd gitlab bin/background_jobs start_foreground

<%- if config.praefect? -%>
praefect: exec gitaly/bin/praefect -config <%= config.praefect.config_file %>
<% config.praefect.nodes.each_with_index do |praefect_node, index| %>
<%= praefect_node.service_name %>: exec gitaly/bin/gitaly <%=config.gdk_root.join(praefect_node.config_file) %>
<%- end -%>
<% else %>
gitaly: exec gitaly/bin/gitaly <%= config.gitaly.config_file %>
<%- end -%>

# Frontend services
#
webpack: exec /usr/bin/env NODE_ENV=development DEV_SERVER_PORT=<%= config.webpack.port %> DEV_SERVER_HOST=<%= config.webpack.host %> support/exec-cd gitlab yarn dev-server
rails-web: exec /usr/bin/env RAILS_ENV=development RAILS_RELATIVE_URL_ROOT=$relative_url_root support/exec-cd gitlab bin/web start_foreground
<%= '#' unless config.gitlab_pages? %>gitlab-pages: exec gitlab-pages/bin/gitlab-pages -listen-http ":<%= config.gitlab_pages.port %>" -artifacts-server <%= config.protocol %>://<%= config.hostname %>:<%= config.port %>/api/v4 -pages-root <%= config.gdk_root %>/gitlab/shared/pages/ -pages-domain 127.0.0.1.xip.io

# Docker
#
registry: exec support/docker-registry

# Monitoring and tracing
#
#influxdb: exec influxdb/bin/influxd -config influxdb/influxdb.conf
#grafana: exec support/wait-postgresql-ready support/exec-cd grafana bin/grafana-server -config grafana.ini
#prometheus: exec docker run --net host -p 9090:9090 -v <%= config.gdk_root.join('prometheus', 'prometheus.yml') %>:/etc/prometheus/prometheus.yml prom/prometheus:v2.8.1
<%= '#' unless config.tracer.jaeger? %>jaeger: exec jaeger/jaeger-<%= config.tracer.jaeger.version %>/jaeger-all-in-one --memory.max-traces 512

# Additional services
#
#sshd: exec <%= config.sshd.bin %> -e -D -f <%= config.gdk_root.join('openssh', 'sshd_config') %>
<%= '#' unless config.nginx? %>nginx: exec <%= config.nginx.bin %> -p <%= config.gdk_root.join('nginx') %> -c conf/nginx.conf
#elasticsearch: exec elasticsearch/bin/elasticsearch

# Tunneling
#
<%= '#' unless config.auto_devops? %>tunnel_gitlab: exec ssh -N -o ControlPath=none -o ControlMaster=no -R <%= config.auto_devops.gitlab.port %>:localhost:<%= config.workhorse.__active_port %> qa-tunnel.gitlab.info
<%= '#' unless config.auto_devops? %>tunnel_registry: exec ssh -N -o ControlPath=none -o ControlMaster=no -R <%= config.auto_devops.registry.port %>:localhost:5000 qa-tunnel.gitlab.info
