#!/usr/bin/env ruby
require 'socket'
require 'net/http'
require 'json'

def main
  host = '127.0.0.1'
  port = '9999'

  system(*%w[gdk start influxdb grafana postgresql])

  abort "#{$PROGRAM_NAME}: could not connect to Grafana at #{host}:#{port}" unless wait_socket(host, port)

  create_data_source(host, port, name: 'InfluxDB', database: 'gitlab', isDefault: true)
  create_data_source(host, port, name: 'InfluxDB Internal', database: '_internal')
end

def create_data_source(host, port, options)
  options = {
    type: 'influxdb',
    url: 'http://localhost:8086',
    access: 'direct'
  }.merge(options)

  http = Net::HTTP.new(host, port)
  request = Net::HTTP::Post.new('/api/datasources')
  request.basic_auth('admin', 'admin')
  request.add_field('Content-Type', 'application/json')
  request.body = JSON.dump(options)
  puts http.request(request).body
end

def wait_socket(host, port)
  30.times do
    begin
      TCPSocket.new(host, port)
      return true
    rescue Errno::ECONNREFUSED
      sleep 1
    end
  end
  false
end

abort "Usage: #{$PROGRAM_NAME}" unless ARGV.empty?

main
