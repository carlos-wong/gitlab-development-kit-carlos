#!/usr/bin/env ruby

require 'pathname'

require_relative '../lib/shellout.rb'

POSTGRESQL_VERSIONS = [ 10, 9.6 ].freeze

def brew_linked_discover
  dirname_if_exists_for('/usr/local/bin/postgres')
end

def brew_symlink_discover
  POSTGRESQL_VERSIONS.each do |version|
    pg_bin_dir = dirname_if_exists_for("/usr/local/opt/postgresql@#{version}/bin/postgres")

    return pg_bin_dir if pg_bin_dir
  end

  nil
end

def brew_cellar_discover
  POSTGRESQL_VERSIONS.each do |version|
    brew_cellar_pg = Shellout.new(%W[brew --cellar postgresql@#{version}]).try_run

    next if brew_cellar_pg.empty?

    brew_cellar_pg_bin = Dir.glob(File.join(brew_cellar_pg, '/*/bin'))
    return brew_cellar_pg_bin.last if brew_cellar_pg_bin.any?
  end

  nil
end

def pg_config_discover
  Shellout.new(%w[pg_config --bindir]).run
rescue Errno::ENOENT
  return nil
end

def dirname_if_exists_for(path)
  path = Pathname.new(path)

  return unless path.exist?

  path.dirname
end

dir = (brew_linked_discover || brew_symlink_discover || brew_cellar_discover || pg_config_discover)

fail('ERROR: Unable to determine PostgreSQL bin directory') unless dir

puts dir

